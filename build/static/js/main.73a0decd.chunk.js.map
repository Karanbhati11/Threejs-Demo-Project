{"version":3,"sources":["assets/textures/8k_earth_daymap.jpg","assets/textures/8k_earth_clouds.jpg","assets/textures/8k_earth_normal_map.jpg","assets/textures/8k_earth_specular_map.jpg","assets/textures/8k_earth_nightmap.jpg","Components/Earth/index.js","App.js","reportWebVitals.js","index.js"],"names":["Earth","props","useLoader","TextureLoader","EarthDayMap","EarthNormalMap","EarthspecularMap","EarthCloudMap","colormap","normalmap","specularmap","cloudmap","earthRef","useRef","cloudsRef","useFrame","elapsetime","clock","getElapsedTime","current","rotation","y","color","position","intensity","Stars","radius","depth","count","factor","saturation","fade","ref","args","map","opacity","depthWrite","transparent","side","THREE","specularMap","normalMap","metalness","roughness","OrbitControls","enableZoon","enableRotate","panspeed","zoomSpeed","rotateSpeed","CanvasContainer","styled","div","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,MAA0B,4CCA1B,MAA0B,4CCA1B,MAA0B,gDCA1B,MAA0B,kD,GCA1B,I,OCUR,SAASA,EAAMC,GACpB,MAAqDC,YACnDC,gBACA,CAACC,EAAaC,EAAgBC,EAAkBC,IAFlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAA4BC,EAA5B,KAAyCC,EAAzC,KAKMC,EAAWC,mBACXC,EAAWD,mBAOjB,OANAE,aAAS,YAAa,IACdC,EADa,EAAVC,MACeC,iBACxBN,EAASO,QAAQC,SAASC,EAAIL,EAAY,EAC1CF,EAAUK,QAAQC,SAASC,EAAIL,EAAW,KAI1C,qCAEE,4BAAYM,MAAM,UAAUC,SAAU,CAAC,EAAE,EAAE,KAAMC,UAAW,MAC5D,cAACC,EAAA,EAAD,CACEC,OAAQ,IACRC,MAAO,GACPC,MAAO,IACPC,OAAQ,EACRC,WAAY,EACZC,MAAM,IAER,uBAAMC,IAAKlB,EAAX,UACE,gCAAgBmB,KAAM,CAAC,MAAO,GAAI,MAClC,mCACEC,IAAKvB,EACLwB,QAAS,GACTC,YAAY,EACZC,aAAa,EACbC,KAAMC,kBAGV,uBAAMP,IAAKpB,EAAX,UACE,gCAAgBqB,KAAM,CAAC,EAAG,GAAI,MAC9B,mCAAmBO,YAAa9B,IAChC,sCAAsBwB,IAAK1B,EAAUiC,UAAWhC,EAAWiC,UAAW,GAAKC,UAAW,KAEtF,cAACC,EAAA,EAAD,CACEC,YAAY,EACZC,cAAc,EACdC,SAAU,GACVC,UAAW,GACXC,YAAa,WClDvB,IAAMC,EAAkBC,IAAOC,IAAV,0DAgBNC,MAVf,WACE,OAAO,cAACH,EAAD,UACL,cAAC,IAAD,UACE,cAAC,WAAD,CAAUI,SAAU,KAApB,SACE,cAACtD,EAAD,WCJOuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.73a0decd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/8k_earth_daymap.54672c1f.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_clouds.08fcd800.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_normal_map.930cf2e9.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_specular_map.7b4efa59.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_nightmap.c0e138e9.jpg\";","import React, { useRef } from \"react\";\r\nimport { TextureLoader } from \"three\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls, Stars } from \"@react-three/drei\";\r\nimport EarthDayMap from \"../../assets/textures/8k_earth_daymap.jpg\";\r\nimport EarthCloudMap from \"../../assets/textures/8k_earth_clouds.jpg\";\r\nimport EarthNormalMap from \"../../assets/textures/8k_earth_normal_map.jpg\";\r\nimport EarthspecularMap from \"../../assets/textures/8k_earth_specular_map.jpg\";\r\nimport EarthNightMap from \"../../assets/textures/8k_earth_nightmap.jpg\";\r\nimport { useFrame, useLoader } from \"react-three-fiber\";\r\nexport function Earth(props) {\r\n  const [colormap, normalmap, specularmap, cloudmap] = useLoader(\r\n    TextureLoader,\r\n    [EarthDayMap, EarthNormalMap, EarthspecularMap, EarthCloudMap]\r\n  );\r\n\r\n  const earthRef = useRef();\r\n  const cloudsRef= useRef();\r\n  useFrame(({clock}) =>{\r\n    const elapsetime= clock.getElapsedTime();\r\n    earthRef.current.rotation.y = elapsetime /6;\r\n    cloudsRef.current.rotation.y = elapsetime/4;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* <ambientLight intensity={1} /> */}\r\n      <pointLight color=\"#f6f3ea\" position={[2,0,5.5]} intensity={1.2} />\r\n      <Stars\r\n        radius={300}\r\n        depth={60}\r\n        count={20000}\r\n        factor={7}\r\n        saturation={0}\r\n        fade={true}\r\n      ></Stars>\r\n      <mesh ref={cloudsRef} >\r\n        <sphereGeometry args={[1.005, 32, 32]} />\r\n        <meshPhongMaterial\r\n          map={cloudmap}\r\n          opacity={0.4}\r\n          depthWrite={true}\r\n          transparent={true}\r\n          side={THREE.DoubleSide}\r\n        />\r\n      </mesh> \r\n      <mesh ref={earthRef} >\r\n        <sphereGeometry args={[1, 32, 32]} />\r\n        <meshPhongMaterial specularMap={specularmap} />\r\n        <meshStandardMaterial map={colormap} normalMap={normalmap} metalness={0.4} roughness={0.7}/>\r\n\r\n        <OrbitControls\r\n          enableZoon={true}\r\n          enableRotate={true}\r\n          panspeed={0.5}\r\n          zoomSpeed={0.6}\r\n          rotateSpeed={0.4}\r\n        />\r\n      </mesh>\r\n    </>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport { Canvas } from \"@react-three/fiber\";\nimport styled from \"styled-components\";\nimport { Suspense } from \"react\";\nimport { Earth } from \"./Components/Earth\";\nconst CanvasContainer = styled.div`\nwidth:100%;\nheight: 100%;\n\n`\n\nfunction App() {\n  return <CanvasContainer>\n    <Canvas>\n      <Suspense fallback={null}>\n        <Earth/>\n      </Suspense>\n    </Canvas>\n  </CanvasContainer>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}